version: '3.7'

networks:
  monitor_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.79.0.0/24
          gateway: 172.79.0.1

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9000:9000"
      # - "9090:80"
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./prometheus/alert.rules:/etc/prometheus/alert.rules"
      - "prometheus_data:/prometheus"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      #- '--web.listen-address=:80'
    links:
      - cadvisor:cadvisor
      #- alertmanager:alertmanager
    depends_on:
      - cadvisor
    networks:
      monitor_net:
        ipv4_address: 172.79.0.2

  grafana: 
      image: grafana/grafana
      container_name: grafana
      restart: unless-stopped
      ports:
        - "3000:80"
      environment:
        - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
        - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
        - GF_USERS_ALLOW_SIGN_UP=false
        - GF_SERVER_HTTP_PORT=${GF_SERVER_HTTP_PORT:-80}
      volumes:
        - grafana_data:${GF_DATA_ROOT:-/var/lib/grafana}
        - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
        - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      depends_on:
        - prometheus
      networks:
        monitor_net:
          ipv4_address: 172.79.0.3

  # Extra Monitoring Tools
  #alertmanager:
  #  image: prom/alertmanager:v0.20.0
  #  container_name: alertmanager
  #  ports:
  #    - 9093:80
  #  volumes:
  #    - ./alertmanager/:/etc/alertmanager/
  #  command:
  #    - '--config.file=/etc/alertmanager/config.yml'
  #    - '--storage.path=/alertmanager'
  #    - '--web.listen-address=http://localhost:80'
  #  restart: unless-stopped
  #  networks:
  #    monitor_net:
  #      ipv4_address: 172.79.0.4

  node-exporter:
    image: prom/node-exporter:v0.18.1
    container_name: node_exporter
    ports:
      - 9500:80
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      #- '/:/host:ro,rslave'
    command:
      #- '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--web.listen-address=:80'
      #- --collector.filesystem.ignored-mount-points
      #- "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    restart: unless-stopped
    networks:
      monitor_net:
        ipv4_address: 172.79.0.5

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    ports:
      - 9092:80
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    devices:
      - /dev/kmsg:/dev/kmsg
    privileged: true
    command:
    - '-port=80'
    networks:
      monitor_net:
        ipv4_address: 172.79.0.6

  #pushgateway:
  #  image: prom/pushgateway:v1.2.0
  #  container_name: pushgateway
  #  restart: unless-stopped
  #  ports:
  #    - 9091:80
  #  networks:
  #    monitor_net:
  #      ipv4_address: 172.79.0.7
  #  command:
  #    - '--web.listen-address=:80'
